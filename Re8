# Import necessary libraries
from transformers import pipeline, AutoTokenizer, AutoModelForCausalLM
import torch

# Step 1: Initialize Emotion Detection Model
emotion_classifier = pipeline("text-classification", 
                            model="bhadresh-savani/distilbert-base-uncased-emotion",
                            return_all_scores=False)

# Step 2: Initialize LLM for Response Generation
model_name = "microsoft/Phi-3-mini-4k-instruct"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(
    model_name,
    device_map="auto",
    load_in_4bit=True,
    trust_remote_code=True
)

# Step 3: Define Function to Detect Emotion and Generate Response
def mental_health_assistant(user_input):
    # Detect emotion
    emotion_result = emotion_classifier(user_input)
    emotion = emotion_result[0]['label']
    confidence = emotion_result[0]['score']

    # Create prompt for 3–4 practical mental health tips
    prompt = f"""<|user|> The user says: "{user_input}" The detected emotion is {emotion}. Provide a short, empathetic response followed by a list of 3–4 practical tips to improve mental health, tailored to the detected emotion. Keep the response concise, under 100 words total, and format the tips as a numbered list. <|assistant|>"""

    # Tokenize and generate response
    inputs = tokenizer(prompt, return_tensors="pt").to("cuda" if torch.cuda.is_available() else "cpu")
    outputs = model.generate(
        **inputs,
        max_new_tokens=100,
        do_sample=True,
        temperature=0.7,
        top_p=0.9,
        pad_token_id=tokenizer.eos_token_id
    )
    response = tokenizer.decode(outputs[0], skip_special_tokens=True)

    # Extract assistant's response
    assistant_response = response.split("<|assistant|>")[1].strip()

    return emotion, confidence, assistant_response

# Step 4: Test the Assistant with Example Inputs
test_inputs = [
    "I feel really sad today, like nothing is going right.",
    "I'm so angry about work, my boss was unfair!",
    "I'm super excited about my new project!",
    "I'm feeling really anxious about a presentation tomorrow."
]

# Step 5: Run the Assistant and Display Results
for user_input in test_inputs:
    emotion, confidence, response = mental_health_assistant(user_input)
    print(f"\nUser Input: {user_input}")
    print(f"Detected Emotion: {emotion} (Confidence: {confidence:.2f})")
    print(f"Assistant Response:\n{response}")
